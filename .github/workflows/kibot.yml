# SPDX-FileCopyrightText: 2022 nerdyscout <https://github.com/nerdyscout/>
#
# SPDX-License-Identifier: CC0-1.0

name: KiBot

on:
  push:
    paths:
    - "*.kicad_sch"
    - "*.kicad_pcb"
    - "*.kicad_pro"
    - "**/*kibot.yml"
  pull_request:
    paths:
    - "*.kicad_sch"
    - "*.kicad_pcb"
    - "*.kicad_pro"
    - "**/*kibot.yml"

env:
  schema: "codec-test-nau88c22.kicad_sch"
  board: "codec-test-nau88c22.kicad_pcb"
  dir: "docs"

jobs:
  DRC:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/inti-cmnb/kicad6_auto:1.6.1
    steps:
      - uses: actions/checkout@v3
        with:
            submodules: true
      - name: Run KiBot for DRC
        run: |
          kibot -c docs.kibot.yml -e ${{env.schema}} -b ${{env.board}} -d ${{env.dir}} -s run_drc -v -i
  ERC:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/inti-cmnb/kicad6_auto:1.6.1
    steps:
      - uses: actions/checkout@v3
        with:
            submodules: true
      - name: Run KiBot for ERC
        run: |
          kibot -c docs.kibot.yml -e ${{env.schema}} -b ${{env.board}} -d ${{env.dir}} -s run_erc -v -i
  build:
    runs-on: ubuntu-latest
    needs: [ERC, DRC]
    container:
      image: ghcr.io/inti-cmnb/kicad6_auto:1.6.1
    steps:
      - uses: actions/checkout@v3
        with:
            submodules: true
      - name: Get Branch Name
        if: github.event_name == 'push' && startswith(github.ref, 'refs/tags/')
        id: branch_name
        run: |
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
      - name: Run KiBot
        run: |
          kibot -c docs.kibot.yml -e ${{env.schema}} -b ${{env.board}} -d ${{env.dir}} -s run_erc,run_drc -v 
      - name: Upload KiBot Output
        uses: actions/upload-artifact@v3
        if: ${{success()}}
        with:
          name: Build-Outputs
          if-no-files-found: error
          path: |
            ${{env.dir}}/**
            !${{env.dir}}/**/*.ogv
            !${{env.dir}}/**/*.log
            !${{env.dir}}/**/*.ini
      - name: Create and Upload Release
        if: github.event_name == 'push' && startswith(github.ref, 'refs/tags/')
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          artifacts: ${{env.dir}}/codec-test-nau88c22-*
